<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>spring-boot-artifacts</artifactId>
    <name>spring-boot-artifacts</name>
    <packaging>war</packaging>
    <description>Demo project for Spring Boot</description>
	<!-- As of NOV 2023, I am packaging as a war.  However...
		 If you are packaging your application as a JAR (deploying a .jar), 
		 using src/main/webapp is not recommended.
		 
		 The reason I am currently using webapp folder is because
		 this app uses "traditional" JSPs in the traditional location:
		 src/main/webapp/WEB-INF/ (in a folder named 'jsp' or something similar.
		 
		 https://docs.spring.io/spring-boot/docs/1.4.3.RELEASE/reference/html/boot-features-developing-web-applications.html
		 Do not use the src/main/webapp directory if your application will be packaged as a jar. 
		 Although this directory is a common standard, it will only work with war packaging 
		 and it will be silently ignored by most build tools if you generate a jar.
		 
		 At some point, I want to move those under the .../resources folder
		 (probably into a sub-folder of 'templates' just like thymeleaf)
		 and reconfigure spring boot to see if that works fairly seamlessly
		 (which I am expecting it will)
		 
		 p.s.  There is an interesting workaround/bridge for apps migrating
		 to .jar from .war mentioned in this post
		 https://stackoverflow.com/questions/28725635/spring-boot-configure-it-to-find-the-webapp-folder
		 ^^^ DEC 2023 - upon further research, this appears to apply 
		 	to "static" resources only i.e. NOT .jsp's'

		 Basically, modify your POM to include src/main/webapp as a resources directory:
		<build>
			<resources>
				<resource>
					<directory>src/main/webapp</directory>
				</resource>
	-->

    <parent>
        <groupId>com.baeldung.spring-boot-modules</groupId>
        <artifactId>spring-boot-modules</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
            <scope>provided</scope>
        </dependency>

<!-- required for JSP -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-jasper</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
        </dependency>

<!-- required for JSP : end -->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>javax.persistence-api</artifactId>
            <version>${jpa.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
        <dependency>
            <groupId>org.subethamail</groupId>
            <artifactId>subethasmtp</artifactId>
            <version>${subethasmtp.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap</artifactId>
            <version>${bootstrap.version}</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>jquery</artifactId>
            <version>${jquery.version}</version>
        </dependency>

		<!-- https://mvnrepository.com/artifact/org.webjars/font-awesome -->
		<dependency>
		    <groupId>org.webjars</groupId>
		    <artifactId>font-awesome</artifactId>
		    <version>6.4.2</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.webjars/highlightjs -->
		<dependency>
		    <groupId>org.webjars</groupId>
		    <artifactId>highlightjs</artifactId>
		    <version>11.5.0</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.webjars/syntaxhighlighter -->
		<dependency>
		    <groupId>org.webjars</groupId>
		    <artifactId>syntaxhighlighter</artifactId>
		    <version>3.0.83</version>
		</dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${httpclient.version}</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            <mainClass>com.baeldung.wrapper.DemoApplication</mainClass>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>
                <executions>
                    <!-- Invokes both the integration-test and the verify goals of the -->
                    <!-- Failsafe Maven plugin -->
                    <execution>
                        <id>integration-tests</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <!-- Skips integration tests if the value of -->
                            <!-- skip.integration.tests property is true -->
                            <includes>
                                <include>**/ExternalPropertyFileLoaderIntegrationTest.java</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>${git-commit-id-plugin.version}</version>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                        <phase>initialize</phase>
                    </execution>
                    <execution>
                        <id>validate-the-git-infos</id>
                        <goals>
                            <goal>validateRevision</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                </executions>
                <configuration>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>autoconfiguration</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <excludes>
                                        <exclude>**/*LiveTest.java</exclude>
                                        <exclude>**/*IntegrationTest.java</exclude>
                                        <exclude>**/*IntTest.java</exclude>
                                    </excludes>
                                    <includes>
                                        <include>**/AutoconfigurationTest.java</include>
                                    </includes>
                                </configuration>
                            </execution>
                        </executions>
                        <configuration>
                            <systemPropertyVariables>
                                <test.mime>json</test.mime>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <properties>
        <!-- The main class to start by executing java -jar -->
        <start-class>com.baeldung.wrapper.DemoApplication</start-class>
        <jquery.version>3.1.1</jquery.version>
        <bootstrap.version>3.3.7-1</bootstrap.version>
        <jpa.version>2.2</jpa.version>
        <git-commit-id-plugin.version>2.2.4</git-commit-id-plugin.version>
        <subethasmtp.version>3.1.7</subethasmtp.version>
        <httpclient.version>4.5.8</httpclient.version>
    </properties>

</project>